<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.webapp.mapper.CommentMapper">
    <select id="listCommentWithChild" resultType="org.webapp.pojo.CommentDO">
        with recursive child_comments as (
        select comment_id, user_id, video_id, parent_id,
        like_count, child_count, content, created_at,
        updated_at, deleted_at, is_deleted from comment_list
        where comment_id=#{comment_id}
        union all
        select comment_list.comment_id, comment_list.user_id,
        comment_list.video_id, comment_list.parent_id,
        comment_list.like_count, comment_list.child_count,
        comment_list.content, comment_list.created_at,
        comment_list.updated_at, comment_list.deleted_at,
        comment_list.is_deleted
        from comment_list join child_comments
        on comment_list.parent_id=child_comments.comment_id
        where comment_list.is_deleted=0
        ) select comment_id, user_id, video_id, parent_id,
        like_count, child_count, content, created_at,
        updated_at, deleted_at, is_deleted
        from child_comments limit #{offset},#{limit};
    </select>
    <select id="countComment" resultType="int">
        with recursive child_comments as (
        select comment_id, parent_id from comment_list
        where comment_id=#{comment_id}
        union all
        select comment_list.comment_id, comment_list.parent_id
        from comment_list join child_comments
        on comment_list.parent_id=child_comments.comment_id
        where comment_list.is_deleted=0
        ) select count(0) from child_comments;
    </select>
    <!--本级评论的子评论数也会更新-->
    <update id="updateCommentCount">
        with recursive parent_comments as (
        select comment_id, parent_id from comment_list
        where comment_id=#{comment_id}
        union all
        select comment_list.comment_id, comment_list.parent_id
        from comment_list join parent_comments
        on parent_comments.parent_id=comment_list.comment_id
        where comment_list.is_deleted=0
        ) update comment_list join parent_comments
        on comment_list.comment_id=parent_comments.comment_id
        set comment_list.child_count=comment_list.child_count+1;
    </update>
    <!--本级评论的父评论的评论数会更新-->
    <update id="removeComment">
        with recursive child_comments as (
        select comment_id, parent_id from comment_list
        where comment_id=#{comment_id}
        union all
        select comment_list.comment_id, comment_list.parent_id
        from comment_list join child_comments
        on comment_list.parent_id=child_comments.comment_id
        where comment_list.is_deleted=0
        ) update comment_list join child_comments
        on comment_list.comment_id=child_comments.comment_id
        set comment_list.is_deleted=1, comment_list.deleted_at=now();

        with recursive parent_comments as (
        select comment_id, parent_id from comment_list
        where comment_id=#{comment_id}
        union all
        select comment_list.comment_id, comment_list.parent_id
        from comment_list join parent_comments
        on parent_comments.parent_id=comment_list.comment_id
        where comment_list.is_deleted=0
        ) update comment_list join parent_comments
        on comment_list.comment_id=parent_comments.comment_id
        set comment_list.child_count=comment_list.child_count-#{minus}
        where comment_list.comment_id!=#{comment_id};
    </update>
</mapper>